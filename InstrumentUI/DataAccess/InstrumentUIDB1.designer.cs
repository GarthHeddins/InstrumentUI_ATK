#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstrumentUI.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InstrumentUIDB")]
	public partial class InstrumentUIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdminPreference(AdminPreference instance);
    partial void UpdateAdminPreference(AdminPreference instance);
    partial void DeleteAdminPreference(AdminPreference instance);
    partial void InsertCacheSample(CacheSample instance);
    partial void UpdateCacheSample(CacheSample instance);
    partial void DeleteCacheSample(CacheSample instance);
    partial void InsertCacheSampleIdentifier(CacheSampleIdentifier instance);
    partial void UpdateCacheSampleIdentifier(CacheSampleIdentifier instance);
    partial void DeleteCacheSampleIdentifier(CacheSampleIdentifier instance);
    partial void InsertMacroFile(MacroFile instance);
    partial void UpdateMacroFile(MacroFile instance);
    partial void DeleteMacroFile(MacroFile instance);
    partial void InsertRecordedSampleIdentifier(RecordedSampleIdentifier instance);
    partial void UpdateRecordedSampleIdentifier(RecordedSampleIdentifier instance);
    partial void DeleteRecordedSampleIdentifier(RecordedSampleIdentifier instance);
    partial void InsertResultDetail(ResultDetail instance);
    partial void UpdateResultDetail(ResultDetail instance);
    partial void DeleteResultDetail(ResultDetail instance);
    partial void InsertResultHeader(ResultHeader instance);
    partial void UpdateResultHeader(ResultHeader instance);
    partial void DeleteResultHeader(ResultHeader instance);
    partial void InsertResultIdentifier(ResultIdentifier instance);
    partial void UpdateResultIdentifier(ResultIdentifier instance);
    partial void DeleteResultIdentifier(ResultIdentifier instance);
    partial void InsertSampleClass(SampleClass instance);
    partial void UpdateSampleClass(SampleClass instance);
    partial void DeleteSampleClass(SampleClass instance);
    partial void InsertSampleIdentifier(SampleIdentifier instance);
    partial void UpdateSampleIdentifier(SampleIdentifier instance);
    partial void DeleteSampleIdentifier(SampleIdentifier instance);
    partial void InsertSampleType(SampleType instance);
    partial void UpdateSampleType(SampleType instance);
    partial void DeleteSampleType(SampleType instance);
    partial void InsertSpectrometerType(SpectrometerType instance);
    partial void UpdateSpectrometerType(SpectrometerType instance);
    partial void DeleteSpectrometerType(SpectrometerType instance);
    partial void InsertTrait(Trait instance);
    partial void UpdateTrait(Trait instance);
    partial void DeleteTrait(Trait instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public InstrumentUIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentUIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentUIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstrumentUIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminPreference> AdminPreferences
		{
			get
			{
				return this.GetTable<AdminPreference>();
			}
		}
		
		public System.Data.Linq.Table<CacheSample> CacheSamples
		{
			get
			{
				return this.GetTable<CacheSample>();
			}
		}
		
		public System.Data.Linq.Table<CacheSampleIdentifier> CacheSampleIdentifiers
		{
			get
			{
				return this.GetTable<CacheSampleIdentifier>();
			}
		}
		
		public System.Data.Linq.Table<MacroFile> MacroFiles
		{
			get
			{
				return this.GetTable<MacroFile>();
			}
		}
		
		public System.Data.Linq.Table<RecordedSampleIdentifier> RecordedSampleIdentifiers
		{
			get
			{
				return this.GetTable<RecordedSampleIdentifier>();
			}
		}
		
		public System.Data.Linq.Table<ResultDetail> ResultDetails
		{
			get
			{
				return this.GetTable<ResultDetail>();
			}
		}
		
		public System.Data.Linq.Table<ResultHeader> ResultHeaders
		{
			get
			{
				return this.GetTable<ResultHeader>();
			}
		}
		
		public System.Data.Linq.Table<ResultIdentifier> ResultIdentifiers
		{
			get
			{
				return this.GetTable<ResultIdentifier>();
			}
		}
		
		public System.Data.Linq.Table<SampleClass> SampleClasses
		{
			get
			{
				return this.GetTable<SampleClass>();
			}
		}
		
		public System.Data.Linq.Table<SampleIdentifier> SampleIdentifiers
		{
			get
			{
				return this.GetTable<SampleIdentifier>();
			}
		}
		
		public System.Data.Linq.Table<SampleType> SampleTypes
		{
			get
			{
				return this.GetTable<SampleType>();
			}
		}
		
		public System.Data.Linq.Table<SpectrometerType> SpectrometerTypes
		{
			get
			{
				return this.GetTable<SpectrometerType>();
			}
		}
		
		public System.Data.Linq.Table<Trait> Traits
		{
			get
			{
				return this.GetTable<Trait>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AdminPreferences")]
	public partial class AdminPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Language;
		
		private bool _SoundsOn;
		
		private bool _AutoSampleId;
		
		private bool _AutoPrint;
		
		private string _AppVersion;
		
		private string _ManualBackground;
		
		private string _LogoFilePath;
		
		private System.Nullable<bool> _AlgorithamVersion;
		
		private string _ReportDirectory;
		
		private string _AddressOnReportLine1;
		
		private string _AddressOnReportLine2;
		
		private string _Email;
		
		private string _DefaultReport;
		
		private bool _SpeedMode;
		
		private bool _SpeedModeDualScan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnSoundsOnChanging(bool value);
    partial void OnSoundsOnChanged();
    partial void OnAutoSampleIdChanging(bool value);
    partial void OnAutoSampleIdChanged();
    partial void OnAutoPrintChanging(bool value);
    partial void OnAutoPrintChanged();
    partial void OnAppVersionChanging(string value);
    partial void OnAppVersionChanged();
    partial void OnManualBackgroundChanging(string value);
    partial void OnManualBackgroundChanged();
    partial void OnLogoFilePathChanging(string value);
    partial void OnLogoFilePathChanged();
    partial void OnAlgorithamVersionChanging(System.Nullable<bool> value);
    partial void OnAlgorithamVersionChanged();
    partial void OnReportDirectoryChanging(string value);
    partial void OnReportDirectoryChanged();
    partial void OnAddressOnReportLine1Changing(string value);
    partial void OnAddressOnReportLine1Changed();
    partial void OnAddressOnReportLine2Changing(string value);
    partial void OnAddressOnReportLine2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDefaultReportChanging(string value);
    partial void OnDefaultReportChanged();
    partial void OnSpeedModeChanging(bool value);
    partial void OnSpeedModeChanged();
    partial void OnSpeedModeDualScanChanging(bool value);
    partial void OnSpeedModeDualScanChanged();
    #endregion
		
		public AdminPreference()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundsOn", DbType="Bit NOT NULL")]
		public bool SoundsOn
		{
			get
			{
				return this._SoundsOn;
			}
			set
			{
				if ((this._SoundsOn != value))
				{
					this.OnSoundsOnChanging(value);
					this.SendPropertyChanging();
					this._SoundsOn = value;
					this.SendPropertyChanged("SoundsOn");
					this.OnSoundsOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoSampleId", DbType="Bit NOT NULL")]
		public bool AutoSampleId
		{
			get
			{
				return this._AutoSampleId;
			}
			set
			{
				if ((this._AutoSampleId != value))
				{
					this.OnAutoSampleIdChanging(value);
					this.SendPropertyChanging();
					this._AutoSampleId = value;
					this.SendPropertyChanged("AutoSampleId");
					this.OnAutoSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoPrint", DbType="Bit NOT NULL")]
		public bool AutoPrint
		{
			get
			{
				return this._AutoPrint;
			}
			set
			{
				if ((this._AutoPrint != value))
				{
					this.OnAutoPrintChanging(value);
					this.SendPropertyChanging();
					this._AutoPrint = value;
					this.SendPropertyChanged("AutoPrint");
					this.OnAutoPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppVersion", DbType="NVarChar(100)")]
		public string AppVersion
		{
			get
			{
				return this._AppVersion;
			}
			set
			{
				if ((this._AppVersion != value))
				{
					this.OnAppVersionChanging(value);
					this.SendPropertyChanging();
					this._AppVersion = value;
					this.SendPropertyChanged("AppVersion");
					this.OnAppVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualBackground", DbType="NVarChar(100)")]
		public string ManualBackground
		{
			get
			{
				return this._ManualBackground;
			}
			set
			{
				if ((this._ManualBackground != value))
				{
					this.OnManualBackgroundChanging(value);
					this.SendPropertyChanging();
					this._ManualBackground = value;
					this.SendPropertyChanged("ManualBackground");
					this.OnManualBackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFilePath", DbType="NVarChar(255)")]
		public string LogoFilePath
		{
			get
			{
				return this._LogoFilePath;
			}
			set
			{
				if ((this._LogoFilePath != value))
				{
					this.OnLogoFilePathChanging(value);
					this.SendPropertyChanging();
					this._LogoFilePath = value;
					this.SendPropertyChanged("LogoFilePath");
					this.OnLogoFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlgorithamVersion", DbType="Bit")]
		public System.Nullable<bool> AlgorithamVersion
		{
			get
			{
				return this._AlgorithamVersion;
			}
			set
			{
				if ((this._AlgorithamVersion != value))
				{
					this.OnAlgorithamVersionChanging(value);
					this.SendPropertyChanging();
					this._AlgorithamVersion = value;
					this.SendPropertyChanged("AlgorithamVersion");
					this.OnAlgorithamVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDirectory", DbType="NVarChar(255)")]
		public string ReportDirectory
		{
			get
			{
				return this._ReportDirectory;
			}
			set
			{
				if ((this._ReportDirectory != value))
				{
					this.OnReportDirectoryChanging(value);
					this.SendPropertyChanging();
					this._ReportDirectory = value;
					this.SendPropertyChanged("ReportDirectory");
					this.OnReportDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOnReportLine1", DbType="NVarChar(255)")]
		public string AddressOnReportLine1
		{
			get
			{
				return this._AddressOnReportLine1;
			}
			set
			{
				if ((this._AddressOnReportLine1 != value))
				{
					this.OnAddressOnReportLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressOnReportLine1 = value;
					this.SendPropertyChanged("AddressOnReportLine1");
					this.OnAddressOnReportLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOnReportLine2", DbType="NVarChar(255)")]
		public string AddressOnReportLine2
		{
			get
			{
				return this._AddressOnReportLine2;
			}
			set
			{
				if ((this._AddressOnReportLine2 != value))
				{
					this.OnAddressOnReportLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressOnReportLine2 = value;
					this.SendPropertyChanged("AddressOnReportLine2");
					this.OnAddressOnReportLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultReport", DbType="NVarChar(50)")]
		public string DefaultReport
		{
			get
			{
				return this._DefaultReport;
			}
			set
			{
				if ((this._DefaultReport != value))
				{
					this.OnDefaultReportChanging(value);
					this.SendPropertyChanging();
					this._DefaultReport = value;
					this.SendPropertyChanged("DefaultReport");
					this.OnDefaultReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeedMode", DbType="Bit NOT NULL")]
		public bool SpeedMode
		{
			get
			{
				return this._SpeedMode;
			}
			set
			{
				if ((this._SpeedMode != value))
				{
					this.OnSpeedModeChanging(value);
					this.SendPropertyChanging();
					this._SpeedMode = value;
					this.SendPropertyChanged("SpeedMode");
					this.OnSpeedModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeedModeDualScan", DbType="Bit NOT NULL")]
		public bool SpeedModeDualScan
		{
			get
			{
				return this._SpeedModeDualScan;
			}
			set
			{
				if ((this._SpeedModeDualScan != value))
				{
					this.OnSpeedModeDualScanChanging(value);
					this.SendPropertyChanging();
					this._SpeedModeDualScan = value;
					this.SendPropertyChanged("SpeedModeDualScan");
					this.OnSpeedModeDualScanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CacheSample : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _MaterialId;
		
		private System.Nullable<int> _CategoryId;
		
		private System.Nullable<int> _SubCategoryId;
		
		private System.Nullable<int> _PresentationId;
		
		private string _Traits;
		
		private string _SampleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaterialIdChanging(System.Nullable<int> value);
    partial void OnMaterialIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<int> value);
    partial void OnSubCategoryIdChanged();
    partial void OnPresentationIdChanging(System.Nullable<int> value);
    partial void OnPresentationIdChanged();
    partial void OnTraitsChanging(string value);
    partial void OnTraitsChanged();
    partial void OnSampleTypeChanging(string value);
    partial void OnSampleTypeChanged();
    #endregion
		
		public CacheSample()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int")]
		public System.Nullable<int> MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="Int")]
		public System.Nullable<int> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentationId", DbType="Int")]
		public System.Nullable<int> PresentationId
		{
			get
			{
				return this._PresentationId;
			}
			set
			{
				if ((this._PresentationId != value))
				{
					this.OnPresentationIdChanging(value);
					this.SendPropertyChanging();
					this._PresentationId = value;
					this.SendPropertyChanged("PresentationId");
					this.OnPresentationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traits", DbType="NVarChar(4000)")]
		public string Traits
		{
			get
			{
				return this._Traits;
			}
			set
			{
				if ((this._Traits != value))
				{
					this.OnTraitsChanging(value);
					this.SendPropertyChanging();
					this._Traits = value;
					this.SendPropertyChanged("Traits");
					this.OnTraitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SampleType
		{
			get
			{
				return this._SampleType;
			}
			set
			{
				if ((this._SampleType != value))
				{
					this.OnSampleTypeChanging(value);
					this.SendPropertyChanging();
					this._SampleType = value;
					this.SendPropertyChanged("SampleType");
					this.OnSampleTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CacheSampleIdentifiers")]
	public partial class CacheSampleIdentifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Value;
		
		private string _SampleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnSampleTypeChanging(string value);
    partial void OnSampleTypeChanged();
    #endregion
		
		public CacheSampleIdentifier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SampleType
		{
			get
			{
				return this._SampleType;
			}
			set
			{
				if ((this._SampleType != value))
				{
					this.OnSampleTypeChanging(value);
					this.SendPropertyChanging();
					this._SampleType = value;
					this.SendPropertyChanged("SampleType");
					this.OnSampleTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MacroFiles")]
	public partial class MacroFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SpectTypeId;
		
		private int _FileId;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSpectTypeIdChanging(int value);
    partial void OnSpectTypeIdChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public MacroFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpectTypeId", DbType="Int NOT NULL")]
		public int SpectTypeId
		{
			get
			{
				return this._SpectTypeId;
			}
			set
			{
				if ((this._SpectTypeId != value))
				{
					this.OnSpectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpectTypeId = value;
					this.SendPropertyChanged("SpectTypeId");
					this.OnSpectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int NOT NULL")]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RecordedSampleIdentifiers")]
	public partial class RecordedSampleIdentifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _MaterialId;
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public RecordedSampleIdentifier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(255)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ResultDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _RequestId;
		
		private string _ModelGroupName;
		
		private System.DateTime _QuantFileVersion;
		
		private System.Nullable<decimal> _UpperBRTestValue;
		
		private System.Nullable<decimal> _LowerBRTestValue;
		
		private string _TestStatusDesc;
		
		private string _BusRuleText;
		
		private int _ReqOrder;
		
		private string _DisplayText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(string value);
    partial void OnRequestIdChanged();
    partial void OnModelGroupNameChanging(string value);
    partial void OnModelGroupNameChanged();
    partial void OnQuantFileVersionChanging(System.DateTime value);
    partial void OnQuantFileVersionChanged();
    partial void OnUpperBRTestValueChanging(System.Nullable<decimal> value);
    partial void OnUpperBRTestValueChanged();
    partial void OnLowerBRTestValueChanging(System.Nullable<decimal> value);
    partial void OnLowerBRTestValueChanged();
    partial void OnTestStatusDescChanging(string value);
    partial void OnTestStatusDescChanged();
    partial void OnBusRuleTextChanging(string value);
    partial void OnBusRuleTextChanged();
    partial void OnReqOrderChanging(int value);
    partial void OnReqOrderChanged();
    partial void OnDisplayTextChanging(string value);
    partial void OnDisplayTextChanged();
    #endregion
		
		public ResultDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(38) NOT NULL", CanBeNull=false)]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModelGroupName
		{
			get
			{
				return this._ModelGroupName;
			}
			set
			{
				if ((this._ModelGroupName != value))
				{
					this.OnModelGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ModelGroupName = value;
					this.SendPropertyChanged("ModelGroupName");
					this.OnModelGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantFileVersion", DbType="DateTime NOT NULL")]
		public System.DateTime QuantFileVersion
		{
			get
			{
				return this._QuantFileVersion;
			}
			set
			{
				if ((this._QuantFileVersion != value))
				{
					this.OnQuantFileVersionChanging(value);
					this.SendPropertyChanging();
					this._QuantFileVersion = value;
					this.SendPropertyChanged("QuantFileVersion");
					this.OnQuantFileVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperBRTestValue", DbType="Decimal(15,6)")]
		public System.Nullable<decimal> UpperBRTestValue
		{
			get
			{
				return this._UpperBRTestValue;
			}
			set
			{
				if ((this._UpperBRTestValue != value))
				{
					this.OnUpperBRTestValueChanging(value);
					this.SendPropertyChanging();
					this._UpperBRTestValue = value;
					this.SendPropertyChanged("UpperBRTestValue");
					this.OnUpperBRTestValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerBRTestValue", DbType="Decimal(15,6)")]
		public System.Nullable<decimal> LowerBRTestValue
		{
			get
			{
				return this._LowerBRTestValue;
			}
			set
			{
				if ((this._LowerBRTestValue != value))
				{
					this.OnLowerBRTestValueChanging(value);
					this.SendPropertyChanging();
					this._LowerBRTestValue = value;
					this.SendPropertyChanged("LowerBRTestValue");
					this.OnLowerBRTestValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStatusDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TestStatusDesc
		{
			get
			{
				return this._TestStatusDesc;
			}
			set
			{
				if ((this._TestStatusDesc != value))
				{
					this.OnTestStatusDescChanging(value);
					this.SendPropertyChanging();
					this._TestStatusDesc = value;
					this.SendPropertyChanged("TestStatusDesc");
					this.OnTestStatusDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusRuleText", DbType="NVarChar(255)")]
		public string BusRuleText
		{
			get
			{
				return this._BusRuleText;
			}
			set
			{
				if ((this._BusRuleText != value))
				{
					this.OnBusRuleTextChanging(value);
					this.SendPropertyChanging();
					this._BusRuleText = value;
					this.SendPropertyChanged("BusRuleText");
					this.OnBusRuleTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqOrder", DbType="Int NOT NULL")]
		public int ReqOrder
		{
			get
			{
				return this._ReqOrder;
			}
			set
			{
				if ((this._ReqOrder != value))
				{
					this.OnReqOrderChanging(value);
					this.SendPropertyChanging();
					this._ReqOrder = value;
					this.SendPropertyChanged("ReqOrder");
					this.OnReqOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this.OnDisplayTextChanging(value);
					this.SendPropertyChanging();
					this._DisplayText = value;
					this.SendPropertyChanged("DisplayText");
					this.OnDisplayTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ResultHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _RequestId;
		
		private System.DateTime _TimeStamp;
		
		private string _LocationName;
		
		private string _CompanyName;
		
		private string _UserName;
		
		private string _SpectSN;
		
		private string _TestStatusDesc;
		
		private string _PresDesc;
		
		private string _MaterialDesc;
		
		private string _CategoryDesc;
		
		private string _SCDesc;
		
		private string _SampleClass;
		
		private string _AnalysisId;
		
		private string _SampleId;
		
		private System.DateTime _LocalTimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(string value);
    partial void OnRequestIdChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSpectSNChanging(string value);
    partial void OnSpectSNChanged();
    partial void OnTestStatusDescChanging(string value);
    partial void OnTestStatusDescChanged();
    partial void OnPresDescChanging(string value);
    partial void OnPresDescChanged();
    partial void OnMaterialDescChanging(string value);
    partial void OnMaterialDescChanged();
    partial void OnCategoryDescChanging(string value);
    partial void OnCategoryDescChanged();
    partial void OnSCDescChanging(string value);
    partial void OnSCDescChanged();
    partial void OnSampleClassChanging(string value);
    partial void OnSampleClassChanged();
    partial void OnAnalysisIdChanging(string value);
    partial void OnAnalysisIdChanged();
    partial void OnSampleIdChanging(string value);
    partial void OnSampleIdChanged();
    partial void OnLocalTimeStampChanging(System.DateTime value);
    partial void OnLocalTimeStampChanged();
    #endregion
		
		public ResultHeader()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(38) NOT NULL", CanBeNull=false)]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpectSN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpectSN
		{
			get
			{
				return this._SpectSN;
			}
			set
			{
				if ((this._SpectSN != value))
				{
					this.OnSpectSNChanging(value);
					this.SendPropertyChanging();
					this._SpectSN = value;
					this.SendPropertyChanged("SpectSN");
					this.OnSpectSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStatusDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TestStatusDesc
		{
			get
			{
				return this._TestStatusDesc;
			}
			set
			{
				if ((this._TestStatusDesc != value))
				{
					this.OnTestStatusDescChanging(value);
					this.SendPropertyChanging();
					this._TestStatusDesc = value;
					this.SendPropertyChanged("TestStatusDesc");
					this.OnTestStatusDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PresDesc
		{
			get
			{
				return this._PresDesc;
			}
			set
			{
				if ((this._PresDesc != value))
				{
					this.OnPresDescChanging(value);
					this.SendPropertyChanging();
					this._PresDesc = value;
					this.SendPropertyChanged("PresDesc");
					this.OnPresDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaterialDesc
		{
			get
			{
				return this._MaterialDesc;
			}
			set
			{
				if ((this._MaterialDesc != value))
				{
					this.OnMaterialDescChanging(value);
					this.SendPropertyChanging();
					this._MaterialDesc = value;
					this.SendPropertyChanged("MaterialDesc");
					this.OnMaterialDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryDesc
		{
			get
			{
				return this._CategoryDesc;
			}
			set
			{
				if ((this._CategoryDesc != value))
				{
					this.OnCategoryDescChanging(value);
					this.SendPropertyChanging();
					this._CategoryDesc = value;
					this.SendPropertyChanged("CategoryDesc");
					this.OnCategoryDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SCDesc
		{
			get
			{
				return this._SCDesc;
			}
			set
			{
				if ((this._SCDesc != value))
				{
					this.OnSCDescChanging(value);
					this.SendPropertyChanging();
					this._SCDesc = value;
					this.SendPropertyChanged("SCDesc");
					this.OnSCDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleClass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SampleClass
		{
			get
			{
				return this._SampleClass;
			}
			set
			{
				if ((this._SampleClass != value))
				{
					this.OnSampleClassChanging(value);
					this.SendPropertyChanging();
					this._SampleClass = value;
					this.SendPropertyChanged("SampleClass");
					this.OnSampleClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisId", DbType="NVarChar(39) NOT NULL", CanBeNull=false)]
		public string AnalysisId
		{
			get
			{
				return this._AnalysisId;
			}
			set
			{
				if ((this._AnalysisId != value))
				{
					this.OnAnalysisIdChanging(value);
					this.SendPropertyChanging();
					this._AnalysisId = value;
					this.SendPropertyChanged("AnalysisId");
					this.OnAnalysisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", DbType="NVarChar(39) NOT NULL", CanBeNull=false)]
		public string SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime LocalTimeStamp
		{
			get
			{
				return this._LocalTimeStamp;
			}
			set
			{
				if ((this._LocalTimeStamp != value))
				{
					this.OnLocalTimeStampChanging(value);
					this.SendPropertyChanging();
					this._LocalTimeStamp = value;
					this.SendPropertyChanged("LocalTimeStamp");
					this.OnLocalTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ResultIdentifiers")]
	public partial class ResultIdentifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _RequestId;
		
		private string _Description;
		
		private string _AttribValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(string value);
    partial void OnRequestIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAttribValueChanging(string value);
    partial void OnAttribValueChanged();
    #endregion
		
		public ResultIdentifier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(38) NOT NULL", CanBeNull=false)]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttribValue", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string AttribValue
		{
			get
			{
				return this._AttribValue;
			}
			set
			{
				if ((this._AttribValue != value))
				{
					this.OnAttribValueChanging(value);
					this.SendPropertyChanging();
					this._AttribValue = value;
					this.SendPropertyChanged("AttribValue");
					this.OnAttribValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SampleClasses")]
	public partial class SampleClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SampleClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SampleIdentifiers")]
	public partial class SampleIdentifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MaterialId;
		
		private string _Name;
		
		private string _Description;
		
		private string _Value;
		
		private int _DisplayOrder;
		
		private bool _Required;
		
		private bool _Numeric;
		
		private bool _DropDown;
		
		private string _MultiValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnNumericChanging(bool value);
    partial void OnNumericChanged();
    partial void OnDropDownChanging(bool value);
    partial void OnDropDownChanged();
    partial void OnMultiValuesChanging(string value);
    partial void OnMultiValuesChanged();
    #endregion
		
		public SampleIdentifier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL")]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numeric", DbType="Bit NOT NULL")]
		public bool Numeric
		{
			get
			{
				return this._Numeric;
			}
			set
			{
				if ((this._Numeric != value))
				{
					this.OnNumericChanging(value);
					this.SendPropertyChanging();
					this._Numeric = value;
					this.SendPropertyChanged("Numeric");
					this.OnNumericChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropDown", DbType="Bit NOT NULL")]
		public bool DropDown
		{
			get
			{
				return this._DropDown;
			}
			set
			{
				if ((this._DropDown != value))
				{
					this.OnDropDownChanging(value);
					this.SendPropertyChanging();
					this._DropDown = value;
					this.SendPropertyChanged("DropDown");
					this.OnDropDownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiValues", DbType="NVarChar(4000)")]
		public string MultiValues
		{
			get
			{
				return this._MultiValues;
			}
			set
			{
				if ((this._MultiValues != value))
				{
					this.OnMultiValuesChanging(value);
					this.SendPropertyChanging();
					this._MultiValues = value;
					this.SendPropertyChanged("MultiValues");
					this.OnMultiValuesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SampleTypes")]
	public partial class SampleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SampleId;
		
		private string _SampleTypeName;
		
		private string _TraitName;
		
		private System.Nullable<decimal> _LCL;
		
		private System.Nullable<decimal> _UCL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSampleIdChanging(string value);
    partial void OnSampleIdChanged();
    partial void OnSampleTypeNameChanging(string value);
    partial void OnSampleTypeNameChanged();
    partial void OnTraitNameChanging(string value);
    partial void OnTraitNameChanged();
    partial void OnLCLChanging(System.Nullable<decimal> value);
    partial void OnLCLChanged();
    partial void OnUCLChanging(System.Nullable<decimal> value);
    partial void OnUCLChanged();
    #endregion
		
		public SampleType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", DbType="NVarChar(255)")]
		public string SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeName", DbType="NVarChar(50)")]
		public string SampleTypeName
		{
			get
			{
				return this._SampleTypeName;
			}
			set
			{
				if ((this._SampleTypeName != value))
				{
					this.OnSampleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeName = value;
					this.SendPropertyChanged("SampleTypeName");
					this.OnSampleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraitName", DbType="NVarChar(50)")]
		public string TraitName
		{
			get
			{
				return this._TraitName;
			}
			set
			{
				if ((this._TraitName != value))
				{
					this.OnTraitNameChanging(value);
					this.SendPropertyChanging();
					this._TraitName = value;
					this.SendPropertyChanged("TraitName");
					this.OnTraitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCL", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> LCL
		{
			get
			{
				return this._LCL;
			}
			set
			{
				if ((this._LCL != value))
				{
					this.OnLCLChanging(value);
					this.SendPropertyChanging();
					this._LCL = value;
					this.SendPropertyChanged("LCL");
					this.OnLCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UCL", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> UCL
		{
			get
			{
				return this._UCL;
			}
			set
			{
				if ((this._UCL != value))
				{
					this.OnUCLChanging(value);
					this.SendPropertyChanging();
					this._UCL = value;
					this.SendPropertyChanged("UCL");
					this.OnUCLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpectrometerTypes")]
	public partial class SpectrometerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _SerialNumber;
		
		private System.Nullable<int> _StdXPMFileId;
		
		private string _StdXPMFileName;
		
		private System.Nullable<int> _WFFileId;
		
		private string _WFFileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnStdXPMFileIdChanging(System.Nullable<int> value);
    partial void OnStdXPMFileIdChanged();
    partial void OnStdXPMFileNameChanging(string value);
    partial void OnStdXPMFileNameChanged();
    partial void OnWFFileIdChanging(System.Nullable<int> value);
    partial void OnWFFileIdChanged();
    partial void OnWFFileNameChanging(string value);
    partial void OnWFFileNameChanged();
    #endregion
		
		public SpectrometerType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdXPMFileId", DbType="Int")]
		public System.Nullable<int> StdXPMFileId
		{
			get
			{
				return this._StdXPMFileId;
			}
			set
			{
				if ((this._StdXPMFileId != value))
				{
					this.OnStdXPMFileIdChanging(value);
					this.SendPropertyChanging();
					this._StdXPMFileId = value;
					this.SendPropertyChanged("StdXPMFileId");
					this.OnStdXPMFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdXPMFileName", DbType="NVarChar(255)")]
		public string StdXPMFileName
		{
			get
			{
				return this._StdXPMFileName;
			}
			set
			{
				if ((this._StdXPMFileName != value))
				{
					this.OnStdXPMFileNameChanging(value);
					this.SendPropertyChanging();
					this._StdXPMFileName = value;
					this.SendPropertyChanged("StdXPMFileName");
					this.OnStdXPMFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFFileId", DbType="Int")]
		public System.Nullable<int> WFFileId
		{
			get
			{
				return this._WFFileId;
			}
			set
			{
				if ((this._WFFileId != value))
				{
					this.OnWFFileIdChanging(value);
					this.SendPropertyChanging();
					this._WFFileId = value;
					this.SendPropertyChanged("WFFileId");
					this.OnWFFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFFileName", DbType="NVarChar(255)")]
		public string WFFileName
		{
			get
			{
				return this._WFFileName;
			}
			set
			{
				if ((this._WFFileName != value))
				{
					this.OnWFFileNameChanging(value);
					this.SendPropertyChanging();
					this._WFFileName = value;
					this.SendPropertyChanged("WFFileName");
					this.OnWFFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Traits")]
	public partial class Trait : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _MaterialId;
		
		private string _MaterialName;
		
		private System.Nullable<int> _CategoryId;
		
		private string _CategoryName;
		
		private System.Nullable<int> _SubcategoryId;
		
		private string _SubcategoryName;
		
		private System.Nullable<int> _PresentationId;
		
		private string _PresentationName;
		
		private System.Nullable<int> _ModelGroupStageId;
		
		private string _ModelGroupStageName;
		
		private System.Nullable<int> _XPMFileId;
		
		private string _XPMFileName;
		
		private System.Nullable<bool> _HomogeneityCheck;
		
		private System.Nullable<int> _MGOrder;
		
		private string _MaterialCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMaterialIdChanging(System.Nullable<int> value);
    partial void OnMaterialIdChanged();
    partial void OnMaterialNameChanging(string value);
    partial void OnMaterialNameChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnSubcategoryIdChanging(System.Nullable<int> value);
    partial void OnSubcategoryIdChanged();
    partial void OnSubcategoryNameChanging(string value);
    partial void OnSubcategoryNameChanged();
    partial void OnPresentationIdChanging(System.Nullable<int> value);
    partial void OnPresentationIdChanged();
    partial void OnPresentationNameChanging(string value);
    partial void OnPresentationNameChanged();
    partial void OnModelGroupStageIdChanging(System.Nullable<int> value);
    partial void OnModelGroupStageIdChanged();
    partial void OnModelGroupStageNameChanging(string value);
    partial void OnModelGroupStageNameChanged();
    partial void OnXPMFileIdChanging(System.Nullable<int> value);
    partial void OnXPMFileIdChanged();
    partial void OnXPMFileNameChanging(string value);
    partial void OnXPMFileNameChanged();
    partial void OnHomogeneityCheckChanging(System.Nullable<bool> value);
    partial void OnHomogeneityCheckChanged();
    partial void OnMGOrderChanging(System.Nullable<int> value);
    partial void OnMGOrderChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    #endregion
		
		public Trait()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int")]
		public System.Nullable<int> MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialName", DbType="NVarChar(50)")]
		public string MaterialName
		{
			get
			{
				return this._MaterialName;
			}
			set
			{
				if ((this._MaterialName != value))
				{
					this.OnMaterialNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialName = value;
					this.SendPropertyChanged("MaterialName");
					this.OnMaterialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubcategoryId", DbType="Int")]
		public System.Nullable<int> SubcategoryId
		{
			get
			{
				return this._SubcategoryId;
			}
			set
			{
				if ((this._SubcategoryId != value))
				{
					this.OnSubcategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubcategoryId = value;
					this.SendPropertyChanged("SubcategoryId");
					this.OnSubcategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubcategoryName", DbType="NVarChar(50)")]
		public string SubcategoryName
		{
			get
			{
				return this._SubcategoryName;
			}
			set
			{
				if ((this._SubcategoryName != value))
				{
					this.OnSubcategoryNameChanging(value);
					this.SendPropertyChanging();
					this._SubcategoryName = value;
					this.SendPropertyChanged("SubcategoryName");
					this.OnSubcategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentationId", DbType="Int")]
		public System.Nullable<int> PresentationId
		{
			get
			{
				return this._PresentationId;
			}
			set
			{
				if ((this._PresentationId != value))
				{
					this.OnPresentationIdChanging(value);
					this.SendPropertyChanging();
					this._PresentationId = value;
					this.SendPropertyChanged("PresentationId");
					this.OnPresentationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentationName", DbType="NVarChar(50)")]
		public string PresentationName
		{
			get
			{
				return this._PresentationName;
			}
			set
			{
				if ((this._PresentationName != value))
				{
					this.OnPresentationNameChanging(value);
					this.SendPropertyChanging();
					this._PresentationName = value;
					this.SendPropertyChanged("PresentationName");
					this.OnPresentationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelGroupStageId", DbType="Int")]
		public System.Nullable<int> ModelGroupStageId
		{
			get
			{
				return this._ModelGroupStageId;
			}
			set
			{
				if ((this._ModelGroupStageId != value))
				{
					this.OnModelGroupStageIdChanging(value);
					this.SendPropertyChanging();
					this._ModelGroupStageId = value;
					this.SendPropertyChanged("ModelGroupStageId");
					this.OnModelGroupStageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelGroupStageName", DbType="NVarChar(100)")]
		public string ModelGroupStageName
		{
			get
			{
				return this._ModelGroupStageName;
			}
			set
			{
				if ((this._ModelGroupStageName != value))
				{
					this.OnModelGroupStageNameChanging(value);
					this.SendPropertyChanging();
					this._ModelGroupStageName = value;
					this.SendPropertyChanged("ModelGroupStageName");
					this.OnModelGroupStageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPMFileId", DbType="Int")]
		public System.Nullable<int> XPMFileId
		{
			get
			{
				return this._XPMFileId;
			}
			set
			{
				if ((this._XPMFileId != value))
				{
					this.OnXPMFileIdChanging(value);
					this.SendPropertyChanging();
					this._XPMFileId = value;
					this.SendPropertyChanged("XPMFileId");
					this.OnXPMFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPMFileName", DbType="NVarChar(255)")]
		public string XPMFileName
		{
			get
			{
				return this._XPMFileName;
			}
			set
			{
				if ((this._XPMFileName != value))
				{
					this.OnXPMFileNameChanging(value);
					this.SendPropertyChanging();
					this._XPMFileName = value;
					this.SendPropertyChanged("XPMFileName");
					this.OnXPMFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomogeneityCheck", DbType="Bit")]
		public System.Nullable<bool> HomogeneityCheck
		{
			get
			{
				return this._HomogeneityCheck;
			}
			set
			{
				if ((this._HomogeneityCheck != value))
				{
					this.OnHomogeneityCheckChanging(value);
					this.SendPropertyChanging();
					this._HomogeneityCheck = value;
					this.SendPropertyChanged("HomogeneityCheck");
					this.OnHomogeneityCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MGOrder", DbType="Int")]
		public System.Nullable<int> MGOrder
		{
			get
			{
				return this._MGOrder;
			}
			set
			{
				if ((this._MGOrder != value))
				{
					this.OnMGOrderChanging(value);
					this.SendPropertyChanging();
					this._MGOrder = value;
					this.SendPropertyChanged("MGOrder");
					this.OnMGOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(3)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _CompanyId;
		
		private string _CompanyName;
		
		private System.Nullable<int> _LocationId;
		
		private string _LocationName;
		
		private System.Nullable<int> _BackgroundTTL;
		
		private System.Nullable<decimal> _WarmParam;
		
		private System.Nullable<decimal> _CleanParam;
		
		private string _LCode;
		
		private string _Role;
		
		private string _Status;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnBackgroundTTLChanging(System.Nullable<int> value);
    partial void OnBackgroundTTLChanged();
    partial void OnWarmParamChanging(System.Nullable<decimal> value);
    partial void OnWarmParamChanged();
    partial void OnCleanParamChanging(System.Nullable<decimal> value);
    partial void OnCleanParamChanged();
    partial void OnLCodeChanging(string value);
    partial void OnLCodeChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundTTL", DbType="Int")]
		public System.Nullable<int> BackgroundTTL
		{
			get
			{
				return this._BackgroundTTL;
			}
			set
			{
				if ((this._BackgroundTTL != value))
				{
					this.OnBackgroundTTLChanging(value);
					this.SendPropertyChanging();
					this._BackgroundTTL = value;
					this.SendPropertyChanged("BackgroundTTL");
					this.OnBackgroundTTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarmParam", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> WarmParam
		{
			get
			{
				return this._WarmParam;
			}
			set
			{
				if ((this._WarmParam != value))
				{
					this.OnWarmParamChanging(value);
					this.SendPropertyChanging();
					this._WarmParam = value;
					this.SendPropertyChanged("WarmParam");
					this.OnWarmParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleanParam", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> CleanParam
		{
			get
			{
				return this._CleanParam;
			}
			set
			{
				if ((this._CleanParam != value))
				{
					this.OnCleanParamChanging(value);
					this.SendPropertyChanging();
					this._CleanParam = value;
					this.SendPropertyChanged("CleanParam");
					this.OnCleanParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LCode
		{
			get
			{
				return this._LCode;
			}
			set
			{
				if ((this._LCode != value))
				{
					this.OnLCodeChanging(value);
					this.SendPropertyChanging();
					this._LCode = value;
					this.SendPropertyChanged("LCode");
					this.OnLCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
