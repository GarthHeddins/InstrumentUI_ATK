//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstrumentUI_ATK.DataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.SyncUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.UserWithReportRequest))]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.UserRole UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.SpectrometerTypeDetail UserAccessibleSpectrometerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.ModelGroup> UserAccessibleTraitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleClass> UserAccessibleSampleClassesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleType> UserAccessibleSampleTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumBool FullSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BackgroundTTLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WarmParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CleanParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public InstrumentUI_ATK.DataService.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public InstrumentUI_ATK.DataService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public InstrumentUI_ATK.DataService.UserRole UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public InstrumentUI_ATK.DataService.SpectrometerTypeDetail UserAccessibleSpectrometerType {
            get {
                return this.UserAccessibleSpectrometerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccessibleSpectrometerTypeField, value) != true)) {
                    this.UserAccessibleSpectrometerTypeField = value;
                    this.RaisePropertyChanged("UserAccessibleSpectrometerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.ModelGroup> UserAccessibleTraits {
            get {
                return this.UserAccessibleTraitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccessibleTraitsField, value) != true)) {
                    this.UserAccessibleTraitsField = value;
                    this.RaisePropertyChanged("UserAccessibleTraits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleClass> UserAccessibleSampleClasses {
            get {
                return this.UserAccessibleSampleClassesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccessibleSampleClassesField, value) != true)) {
                    this.UserAccessibleSampleClassesField = value;
                    this.RaisePropertyChanged("UserAccessibleSampleClasses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleType> UserAccessibleSampleTypes {
            get {
                return this.UserAccessibleSampleTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccessibleSampleTypesField, value) != true)) {
                    this.UserAccessibleSampleTypesField = value;
                    this.RaisePropertyChanged("UserAccessibleSampleTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public InstrumentUI_ATK.DataService.EnumBool FullSync {
            get {
                return this.FullSyncField;
            }
            set {
                if ((this.FullSyncField.Equals(value) != true)) {
                    this.FullSyncField = value;
                    this.RaisePropertyChanged("FullSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int BackgroundTTL {
            get {
                return this.BackgroundTTLField;
            }
            set {
                if ((this.BackgroundTTLField.Equals(value) != true)) {
                    this.BackgroundTTLField = value;
                    this.RaisePropertyChanged("BackgroundTTL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public decimal WarmParam {
            get {
                return this.WarmParamField;
            }
            set {
                if ((this.WarmParamField.Equals(value) != true)) {
                    this.WarmParamField = value;
                    this.RaisePropertyChanged("WarmParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public decimal CleanParam {
            get {
                return this.CleanParamField;
            }
            set {
                if ((this.CleanParamField.Equals(value) != true)) {
                    this.CleanParamField = value;
                    this.RaisePropertyChanged("CleanParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public InstrumentUI_ATK.DataService.EnumStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public System.DateTime StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string LCode {
            get {
                return this.LCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LCodeField, value) != true)) {
                    this.LCodeField = value;
                    this.RaisePropertyChanged("LCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.LocationCriteria))]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpectrometerTypeDetail", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SpectrometerTypeDetail : InstrumentUI_ATK.DataService.SpectrometerType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.BinaryFile BackgroundFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.BinaryFile WorkflowFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.BinaryFile> MacrosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstrumentUI_ATK.DataService.BinaryFile BackgroundFile {
            get {
                return this.BackgroundFileField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundFileField, value) != true)) {
                    this.BackgroundFileField = value;
                    this.RaisePropertyChanged("BackgroundFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstrumentUI_ATK.DataService.BinaryFile WorkflowFile {
            get {
                return this.WorkflowFileField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowFileField, value) != true)) {
                    this.WorkflowFileField = value;
                    this.RaisePropertyChanged("WorkflowFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.BinaryFile> Macros {
            get {
                return this.MacrosField;
            }
            set {
                if ((object.ReferenceEquals(this.MacrosField, value) != true)) {
                    this.MacrosField = value;
                    this.RaisePropertyChanged("Macros");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncUser", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SyncUser : InstrumentUI_ATK.DataService.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialSampleIdentifier> UserAccessibleSampleIdentifiersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialSampleIdentifier> UserAccessibleSampleIdentifiers {
            get {
                return this.UserAccessibleSampleIdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccessibleSampleIdentifiersField, value) != true)) {
                    this.UserAccessibleSampleIdentifiersField = value;
                    this.RaisePropertyChanged("UserAccessibleSampleIdentifiers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserWithReportRequest", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserWithReportRequest : InstrumentUI_ATK.DataService.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumReportType ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpectralDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UICultureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisIdField, value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstrumentUI_ATK.DataService.EnumReportType ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpectralData {
            get {
                return this.SpectralDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SpectralDataField, value) != true)) {
                    this.SpectralDataField = value;
                    this.RaisePropertyChanged("SpectralData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UICulture {
            get {
                return this.UICultureField;
            }
            set {
                if ((object.ReferenceEquals(this.UICultureField, value) != true)) {
                    this.UICultureField = value;
                    this.RaisePropertyChanged("UICulture");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelGroup", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ModelGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpectrometerTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.Material MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.SubCategory SubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.Presentation PresentationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PredictionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalculatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculationInputsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumBool HomogeneityCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.ModelGroupStage ModelGroupStageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.BinaryFile XpmFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraitId {
            get {
                return this.TraitIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitIdField, value) != true)) {
                    this.TraitIdField = value;
                    this.RaisePropertyChanged("TraitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string SpectrometerTypeDescription {
            get {
                return this.SpectrometerTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpectrometerTypeDescriptionField, value) != true)) {
                    this.SpectrometerTypeDescriptionField = value;
                    this.RaisePropertyChanged("SpectrometerTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public InstrumentUI_ATK.DataService.Material Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialField, value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public InstrumentUI_ATK.DataService.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public InstrumentUI_ATK.DataService.SubCategory SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryField, value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public InstrumentUI_ATK.DataService.Presentation Presentation {
            get {
                return this.PresentationField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationField, value) != true)) {
                    this.PresentationField = value;
                    this.RaisePropertyChanged("Presentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int PredictionType {
            get {
                return this.PredictionTypeField;
            }
            set {
                if ((this.PredictionTypeField.Equals(value) != true)) {
                    this.PredictionTypeField = value;
                    this.RaisePropertyChanged("PredictionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int Calculated {
            get {
                return this.CalculatedField;
            }
            set {
                if ((this.CalculatedField.Equals(value) != true)) {
                    this.CalculatedField = value;
                    this.RaisePropertyChanged("Calculated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string CalculationInputs {
            get {
                return this.CalculationInputsField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculationInputsField, value) != true)) {
                    this.CalculationInputsField = value;
                    this.RaisePropertyChanged("CalculationInputs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public InstrumentUI_ATK.DataService.EnumBool HomogeneityCheck {
            get {
                return this.HomogeneityCheckField;
            }
            set {
                if ((this.HomogeneityCheckField.Equals(value) != true)) {
                    this.HomogeneityCheckField = value;
                    this.RaisePropertyChanged("HomogeneityCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public InstrumentUI_ATK.DataService.ModelGroupStage ModelGroupStage {
            get {
                return this.ModelGroupStageField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelGroupStageField, value) != true)) {
                    this.ModelGroupStageField = value;
                    this.RaisePropertyChanged("ModelGroupStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public InstrumentUI_ATK.DataService.BinaryFile XpmFile {
            get {
                return this.XpmFileField;
            }
            set {
                if ((object.ReferenceEquals(this.XpmFileField, value) != true)) {
                    this.XpmFileField = value;
                    this.RaisePropertyChanged("XpmFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public InstrumentUI_ATK.DataService.EnumStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.DateTime StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public System.DateTime ChangedDate {
            get {
                return this.ChangedDateField;
            }
            set {
                if ((this.ChangedDateField.Equals(value) != true)) {
                    this.ChangedDateField = value;
                    this.RaisePropertyChanged("ChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleClass", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleClassNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleClassName {
            get {
                return this.SampleClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleClassNameField, value) != true)) {
                    this.SampleClassNameField = value;
                    this.RaisePropertyChanged("SampleClassName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleType", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UCLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleTypeName {
            get {
                return this.SampleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleTypeNameField, value) != true)) {
                    this.SampleTypeNameField = value;
                    this.RaisePropertyChanged("SampleTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string TraitName {
            get {
                return this.TraitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitNameField, value) != true)) {
                    this.TraitNameField = value;
                    this.RaisePropertyChanged("TraitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public decimal LCL {
            get {
                return this.LCLField;
            }
            set {
                if ((this.LCLField.Equals(value) != true)) {
                    this.LCLField = value;
                    this.RaisePropertyChanged("LCL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public decimal UCL {
            get {
                return this.UCLField;
            }
            set {
                if ((this.UCLField.Equals(value) != true)) {
                    this.UCLField = value;
                    this.RaisePropertyChanged("UCL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumBool", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumBool : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YES = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumStatus", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACTIVE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DISABLED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMINATED = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationCriteria", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class LocationCriteria : InstrumentUI_ATK.DataService.Location {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpectrometerType", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.SpectrometerTypeDetail))]
    public partial class SpectrometerType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpectrometerTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpectrometerTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpectrometerTypeId {
            get {
                return this.SpectrometerTypeIdField;
            }
            set {
                if ((this.SpectrometerTypeIdField.Equals(value) != true)) {
                    this.SpectrometerTypeIdField = value;
                    this.RaisePropertyChanged("SpectrometerTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpectrometerTypeName {
            get {
                return this.SpectrometerTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpectrometerTypeNameField, value) != true)) {
                    this.SpectrometerTypeNameField = value;
                    this.RaisePropertyChanged("SpectrometerTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public InstrumentUI_ATK.DataService.EnumStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BinaryFile", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class BinaryFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumFileType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstrumentUI_ATK.DataService.EnumFileType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime ChangedDate {
            get {
                return this.ChangedDateField;
            }
            set {
                if ((this.ChangedDateField.Equals(value) != true)) {
                    this.ChangedDateField = value;
                    this.RaisePropertyChanged("ChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumFileType", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumFileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WF = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MACRO = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Material", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.MaterialSampleIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.MaterialCriteria))]
    public partial class Material : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MaterialCode {
            get {
                return this.MaterialCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialCodeField, value) != true)) {
                    this.MaterialCodeField = value;
                    this.RaisePropertyChanged("MaterialCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.CategoryCriteria))]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubCategory", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.SubCategoryCriteria))]
    public partial class SubCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCategoryId {
            get {
                return this.SubCategoryIdField;
            }
            set {
                if ((this.SubCategoryIdField.Equals(value) != true)) {
                    this.SubCategoryIdField = value;
                    this.RaisePropertyChanged("SubCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubCategoryName {
            get {
                return this.SubCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryNameField, value) != true)) {
                    this.SubCategoryNameField = value;
                    this.RaisePropertyChanged("SubCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Presentation", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Presentation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PresentationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PresentationId {
            get {
                return this.PresentationIdField;
            }
            set {
                if ((this.PresentationIdField.Equals(value) != true)) {
                    this.PresentationIdField = value;
                    this.RaisePropertyChanged("PresentationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationName {
            get {
                return this.PresentationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationNameField, value) != true)) {
                    this.PresentationNameField = value;
                    this.RaisePropertyChanged("PresentationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelGroupStage", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ModelGroupStage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelGroupStageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelGroupStageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModelGroupStageId {
            get {
                return this.ModelGroupStageIdField;
            }
            set {
                if ((this.ModelGroupStageIdField.Equals(value) != true)) {
                    this.ModelGroupStageIdField = value;
                    this.RaisePropertyChanged("ModelGroupStageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelGroupStageName {
            get {
                return this.ModelGroupStageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelGroupStageNameField, value) != true)) {
                    this.ModelGroupStageNameField = value;
                    this.RaisePropertyChanged("ModelGroupStageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaterialSampleIdentifier", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MaterialSampleIdentifier : InstrumentUI_ATK.DataService.Material {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifier> SampleIdentifiersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifier> SampleIdentifiers {
            get {
                return this.SampleIdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdentifiersField, value) != true)) {
                    this.SampleIdentifiersField = value;
                    this.RaisePropertyChanged("SampleIdentifiers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaterialCriteria", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MaterialCriteria : InstrumentUI_ATK.DataService.Material {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleIdentifier", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDropDownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNumericField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DisplayOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsDropDown {
            get {
                return this.IsDropDownField;
            }
            set {
                if ((this.IsDropDownField.Equals(value) != true)) {
                    this.IsDropDownField = value;
                    this.RaisePropertyChanged("IsDropDown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool IsRequired {
            get {
                return this.IsRequiredField;
            }
            set {
                if ((this.IsRequiredField.Equals(value) != true)) {
                    this.IsRequiredField = value;
                    this.RaisePropertyChanged("IsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool IsNumeric {
            get {
                return this.IsNumericField;
            }
            set {
                if ((this.IsNumericField.Equals(value) != true)) {
                    this.IsNumericField = value;
                    this.RaisePropertyChanged("IsNumeric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public byte DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryCriteria", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CategoryCriteria : InstrumentUI_ATK.DataService.Category {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubCategoryCriteria", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SubCategoryCriteria : InstrumentUI_ATK.DataService.SubCategory {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumReportType", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumReportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SA = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COFA = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TRENDCHART = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TESTCOUNT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HISTORY = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONTROLCHART = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RD = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SPECTRALPLOT = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alert", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Alert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstrumentUI_ATK.DataService.EnumLanguage LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public InstrumentUI_ATK.DataService.EnumLanguage Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((this.LanguageField.Equals(value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumLanguage", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumLanguage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENGLISH = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GERMAN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SPANISH = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumResultStatus", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumResultStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNASSIGNED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASSIGNED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILURE = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpectrometerSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.ResultDetail> DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.ResultIdentifier> IdentifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocalTimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string SpectrometerSerialNumber {
            get {
                return this.SpectrometerSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SpectrometerSerialNumberField, value) != true)) {
                    this.SpectrometerSerialNumberField = value;
                    this.RaisePropertyChanged("SpectrometerSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string TestStatus {
            get {
                return this.TestStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TestStatusField, value) != true)) {
                    this.TestStatusField = value;
                    this.RaisePropertyChanged("TestStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string SubCategoryName {
            get {
                return this.SubCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryNameField, value) != true)) {
                    this.SubCategoryNameField = value;
                    this.RaisePropertyChanged("SubCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string PresentationName {
            get {
                return this.PresentationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationNameField, value) != true)) {
                    this.PresentationNameField = value;
                    this.RaisePropertyChanged("PresentationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string SampleClassName {
            get {
                return this.SampleClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleClassNameField, value) != true)) {
                    this.SampleClassNameField = value;
                    this.RaisePropertyChanged("SampleClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisIdField, value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.ResultDetail> Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.ResultIdentifier> Identifiers {
            get {
                return this.IdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifiersField, value) != true)) {
                    this.IdentifiersField = value;
                    this.RaisePropertyChanged("Identifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.DateTime LocalTimeStamp {
            get {
                return this.LocalTimeStampField;
            }
            set {
                if ((this.LocalTimeStampField.Equals(value) != true)) {
                    this.LocalTimeStampField = value;
                    this.RaisePropertyChanged("LocalTimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultDetail", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ResultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime QuantFileVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UpperBusinessRuleTestValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LowerBusinessRuleTestValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessRuleTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraitName {
            get {
                return this.TraitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitNameField, value) != true)) {
                    this.TraitNameField = value;
                    this.RaisePropertyChanged("TraitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime QuantFileVersion {
            get {
                return this.QuantFileVersionField;
            }
            set {
                if ((this.QuantFileVersionField.Equals(value) != true)) {
                    this.QuantFileVersionField = value;
                    this.RaisePropertyChanged("QuantFileVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<decimal> UpperBusinessRuleTestValue {
            get {
                return this.UpperBusinessRuleTestValueField;
            }
            set {
                if ((this.UpperBusinessRuleTestValueField.Equals(value) != true)) {
                    this.UpperBusinessRuleTestValueField = value;
                    this.RaisePropertyChanged("UpperBusinessRuleTestValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<decimal> LowerBusinessRuleTestValue {
            get {
                return this.LowerBusinessRuleTestValueField;
            }
            set {
                if ((this.LowerBusinessRuleTestValueField.Equals(value) != true)) {
                    this.LowerBusinessRuleTestValueField = value;
                    this.RaisePropertyChanged("LowerBusinessRuleTestValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string BusinessRuleText {
            get {
                return this.BusinessRuleTextField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRuleTextField, value) != true)) {
                    this.BusinessRuleTextField = value;
                    this.RaisePropertyChanged("BusinessRuleText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string TestStatus {
            get {
                return this.TestStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TestStatusField, value) != true)) {
                    this.TestStatusField = value;
                    this.RaisePropertyChanged("TestStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int RequestOrder {
            get {
                return this.RequestOrderField;
            }
            set {
                if ((this.RequestOrderField.Equals(value) != true)) {
                    this.RequestOrderField = value;
                    this.RaisePropertyChanged("RequestOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultIdentifier", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ResultIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribute {
            get {
                return this.AttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeField, value) != true)) {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumHelpCode", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumHelpCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_LOGIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_SYNCHRONIZATION = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_CONSOLE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_ANALYZE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_RESULT = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_PREVIOUS_RESULT = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_SUBMITTED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_ADMIN_SUPPORT = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_ADMIN_PREFERENCE = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_ADMIN_SETUP = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRUMENT_CHANGE_PASSWORD = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumRequestIdType", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumRequestIdType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SAMPLE_ID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANALYSIS_ID = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumReportFormat", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    public enum EnumReportFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WORD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEL = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrendChartDataWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TrendChartDataWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitResult> listTraitResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.TrendChartData> listTrendChartDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitResult> listTraitResult {
            get {
                return this.listTraitResultField;
            }
            set {
                if ((object.ReferenceEquals(this.listTraitResultField, value) != true)) {
                    this.listTraitResultField = value;
                    this.RaisePropertyChanged("listTraitResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TrendChartData> listTrendChartData {
            get {
                return this.listTrendChartDataField;
            }
            set {
                if ((object.ReferenceEquals(this.listTrendChartDataField, value) != true)) {
                    this.listTrendChartDataField = value;
                    this.RaisePropertyChanged("listTrendChartData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TraitResult", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TraitResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ModalVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ModalVariance {
            get {
                return this.ModalVarianceField;
            }
            set {
                if ((this.ModalVarianceField.Equals(value) != true)) {
                    this.ModalVarianceField = value;
                    this.RaisePropertyChanged("ModalVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraitName {
            get {
                return this.TraitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitNameField, value) != true)) {
                    this.TraitNameField = value;
                    this.RaisePropertyChanged("TraitName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrendChartData", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TrendChartData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocalTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisIdField, value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LocalTimeStamp {
            get {
                return this.LocalTimeStampField;
            }
            set {
                if ((this.LocalTimeStampField.Equals(value) != true)) {
                    this.LocalTimeStampField = value;
                    this.RaisePropertyChanged("LocalTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialField, value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryField, value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestCount", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TestCount : InstrumentUI_ATK.DataService.TestOutlierCount {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OutlierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SamplesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialField, value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Outlier {
            get {
                return this.OutlierField;
            }
            set {
                if ((this.OutlierField.Equals(value) != true)) {
                    this.OutlierField = value;
                    this.RaisePropertyChanged("Outlier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqOrder {
            get {
                return this.ReqOrderField;
            }
            set {
                if ((this.ReqOrderField.Equals(value) != true)) {
                    this.ReqOrderField = value;
                    this.RaisePropertyChanged("ReqOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Samples {
            get {
                return this.SamplesField;
            }
            set {
                if ((this.SamplesField.Equals(value) != true)) {
                    this.SamplesField = value;
                    this.RaisePropertyChanged("Samples");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Test {
            get {
                return this.TestField;
            }
            set {
                if ((this.TestField.Equals(value) != true)) {
                    this.TestField = value;
                    this.RaisePropertyChanged("Test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Trait {
            get {
                return this.TraitField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitField, value) != true)) {
                    this.TraitField = value;
                    this.RaisePropertyChanged("Trait");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestOutlierCount", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.TestCount))]
    public partial class TestOutlierCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TraitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TraitId {
            get {
                return this.TraitIdField;
            }
            set {
                if ((this.TraitIdField.Equals(value) != true)) {
                    this.TraitIdField = value;
                    this.RaisePropertyChanged("TraitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleCountData", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleCountData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int SampleCount {
            get {
                return this.SampleCountField;
            }
            set {
                if ((this.SampleCountField.Equals(value) != true)) {
                    this.SampleCountField = value;
                    this.RaisePropertyChanged("SampleCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrendChartCriteriaWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TrendChartCriteriaWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> CompaniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifierTrendChartCriteria> IdentifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.CategoryCriteria> categoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> locationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialCriteria> materialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SubCategoryCriteria> subCategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> Companies {
            get {
                return this.CompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompaniesField, value) != true)) {
                    this.CompaniesField = value;
                    this.RaisePropertyChanged("Companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifierTrendChartCriteria> Identifiers {
            get {
                return this.IdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifiersField, value) != true)) {
                    this.IdentifiersField = value;
                    this.RaisePropertyChanged("Identifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.CategoryCriteria> categories {
            get {
                return this.categoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.categoriesField, value) != true)) {
                    this.categoriesField = value;
                    this.RaisePropertyChanged("categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> locations {
            get {
                return this.locationsField;
            }
            set {
                if ((object.ReferenceEquals(this.locationsField, value) != true)) {
                    this.locationsField = value;
                    this.RaisePropertyChanged("locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialCriteria> materials {
            get {
                return this.materialsField;
            }
            set {
                if ((object.ReferenceEquals(this.materialsField, value) != true)) {
                    this.materialsField = value;
                    this.RaisePropertyChanged("materials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SubCategoryCriteria> subCategories {
            get {
                return this.subCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.subCategoriesField, value) != true)) {
                    this.subCategoriesField = value;
                    this.RaisePropertyChanged("subCategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleIdentifierTrendChartCriteria", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleIdentifierTrendChartCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttribIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttribId {
            get {
                return this.AttribIdField;
            }
            set {
                if ((this.AttribIdField.Equals(value) != true)) {
                    this.AttribIdField = value;
                    this.RaisePropertyChanged("AttribId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestCountCriteriaWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TestCountCriteriaWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> CompaniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> locationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> Companies {
            get {
                return this.CompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompaniesField, value) != true)) {
                    this.CompaniesField = value;
                    this.RaisePropertyChanged("Companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> locations {
            get {
                return this.locationsField;
            }
            set {
                if ((object.ReferenceEquals(this.locationsField, value) != true)) {
                    this.locationsField = value;
                    this.RaisePropertyChanged("locations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomUserReportHeader", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CustomUserReportHeader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CompanyLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlgorithamVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CompanyLogo {
            get {
                return this.CompanyLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyLogoField, value) != true)) {
                    this.CompanyLogoField = value;
                    this.RaisePropertyChanged("CompanyLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlgorithamVersion {
            get {
                return this.IsAlgorithamVersionField;
            }
            set {
                if ((this.IsAlgorithamVersionField.Equals(value) != true)) {
                    this.IsAlgorithamVersionField = value;
                    this.RaisePropertyChanged("IsAlgorithamVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoriteReport", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.HistoricalShowColumnWrapper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper))]
    public partial class FavoriteReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportID {
            get {
                return this.ReportIDField;
            }
            set {
                if ((this.ReportIDField.Equals(value) != true)) {
                    this.ReportIDField = value;
                    this.RaisePropertyChanged("ReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportName {
            get {
                return this.ReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNameField, value) != true)) {
                    this.ReportNameField = value;
                    this.RaisePropertyChanged("ReportName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoricalShowColumnWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class HistoricalShowColumnWrapper : InstrumentUI_ATK.DataService.FavoriteReport {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Location> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialCriteria> MaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifierWithLocationMaterial> SampleIdentifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SelectedColumnData> SelectedColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitWithLocationMaterial> TraitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Location> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialCriteria> Materials {
            get {
                return this.MaterialsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialsField, value) != true)) {
                    this.MaterialsField = value;
                    this.RaisePropertyChanged("Materials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifierWithLocationMaterial> SampleIdentifiers {
            get {
                return this.SampleIdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdentifiersField, value) != true)) {
                    this.SampleIdentifiersField = value;
                    this.RaisePropertyChanged("SampleIdentifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SelectedColumnData> SelectedColumns {
            get {
                return this.SelectedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedColumnsField, value) != true)) {
                    this.SelectedColumnsField = value;
                    this.RaisePropertyChanged("SelectedColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitWithLocationMaterial> Traits {
            get {
                return this.TraitsField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitsField, value) != true)) {
                    this.TraitsField = value;
                    this.RaisePropertyChanged("Traits");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoricalCriteriaWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class HistoricalCriteriaWrapper : InstrumentUI_ATK.DataService.FavoriteReport {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> CompaniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationWithCompany> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialWithLocation> MaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SelectedColumnData> SelectedColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Location> SelectedLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Material> SelectedMaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> Companies {
            get {
                return this.CompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompaniesField, value) != true)) {
                    this.CompaniesField = value;
                    this.RaisePropertyChanged("Companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationWithCompany> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialWithLocation> Materials {
            get {
                return this.MaterialsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialsField, value) != true)) {
                    this.MaterialsField = value;
                    this.RaisePropertyChanged("Materials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SelectedColumnData> SelectedColumns {
            get {
                return this.SelectedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedColumnsField, value) != true)) {
                    this.SelectedColumnsField = value;
                    this.RaisePropertyChanged("SelectedColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedCompany {
            get {
                return this.SelectedCompanyField;
            }
            set {
                if ((this.SelectedCompanyField.Equals(value) != true)) {
                    this.SelectedCompanyField = value;
                    this.RaisePropertyChanged("SelectedCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Location> SelectedLocations {
            get {
                return this.SelectedLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedLocationsField, value) != true)) {
                    this.SelectedLocationsField = value;
                    this.RaisePropertyChanged("SelectedLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Material> SelectedMaterials {
            get {
                return this.SelectedMaterialsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedMaterialsField, value) != true)) {
                    this.SelectedMaterialsField = value;
                    this.RaisePropertyChanged("SelectedMaterials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationWithCompany", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class LocationWithCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaterialWithLocation", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MaterialWithLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedColumnData", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SelectedColumnData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifier> SelectedSampleIdentifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Trait> SelectedTraitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedLocation {
            get {
                return this.SelectedLocationField;
            }
            set {
                if ((this.SelectedLocationField.Equals(value) != true)) {
                    this.SelectedLocationField = value;
                    this.RaisePropertyChanged("SelectedLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedMaterial {
            get {
                return this.SelectedMaterialField;
            }
            set {
                if ((this.SelectedMaterialField.Equals(value) != true)) {
                    this.SelectedMaterialField = value;
                    this.RaisePropertyChanged("SelectedMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifier> SelectedSampleIdentifiers {
            get {
                return this.SelectedSampleIdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSampleIdentifiersField, value) != true)) {
                    this.SelectedSampleIdentifiersField = value;
                    this.RaisePropertyChanged("SelectedSampleIdentifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Trait> SelectedTraits {
            get {
                return this.SelectedTraitsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedTraitsField, value) != true)) {
                    this.SelectedTraitsField = value;
                    this.RaisePropertyChanged("SelectedTraits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleIdentifierWithLocationMaterial", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleIdentifierWithLocationMaterial : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TraitWithLocationMaterial", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TraitWithLocationMaterial : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatgoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TraitOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatgoryId {
            get {
                return this.CatgoryIdField;
            }
            set {
                if ((this.CatgoryIdField.Equals(value) != true)) {
                    this.CatgoryIdField = value;
                    this.RaisePropertyChanged("CatgoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TraitOrder {
            get {
                return this.TraitOrderField;
            }
            set {
                if ((this.TraitOrderField.Equals(value) != true)) {
                    this.TraitOrderField = value;
                    this.RaisePropertyChanged("TraitOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trait", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.TraitWithResultVal))]
    public partial class Trait : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TraitOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TraitOrder {
            get {
                return this.TraitOrderField;
            }
            set {
                if ((this.TraitOrderField.Equals(value) != true)) {
                    this.TraitOrderField = value;
                    this.RaisePropertyChanged("TraitOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraitVersion {
            get {
                return this.TraitVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitVersionField, value) != true)) {
                    this.TraitVersionField = value;
                    this.RaisePropertyChanged("TraitVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TraitWithResultVal", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TraitWithResultVal : InstrumentUI_ATK.DataService.Trait {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestValField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestVal {
            get {
                return this.RequestValField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestValField, value) != true)) {
                    this.RequestValField = value;
                    this.RaisePropertyChanged("RequestVal");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoricalDataWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class HistoricalDataWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.HistoricalData> HistoricalDataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.HistoricalData> HistoricalDataList {
            get {
                return this.HistoricalDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoricalDataListField, value) != true)) {
                    this.HistoricalDataListField = value;
                    this.RaisePropertyChanged("HistoricalDataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoricalData", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class HistoricalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlgorithmVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AnalysisDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifier> SampleIdentifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitWithResultVal> TraitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlgorithmVersion {
            get {
                return this.AlgorithmVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.AlgorithmVersionField, value) != true)) {
                    this.AlgorithmVersionField = value;
                    this.RaisePropertyChanged("AlgorithmVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnalysisDate {
            get {
                return this.AnalysisDateField;
            }
            set {
                if ((this.AnalysisDateField.Equals(value) != true)) {
                    this.AnalysisDateField = value;
                    this.RaisePropertyChanged("AnalysisDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisIdField, value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifier> SampleIdentifiers {
            get {
                return this.SampleIdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdentifiersField, value) != true)) {
                    this.SampleIdentifiersField = value;
                    this.RaisePropertyChanged("SampleIdentifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitWithResultVal> Traits {
            get {
                return this.TraitsField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitsField, value) != true)) {
                    this.TraitsField = value;
                    this.RaisePropertyChanged("Traits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDCriteriaWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RDCriteriaWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.CategoryCriteria> CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> CompaniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MahMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MahMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialCriteria> MaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleClass> SampleClassesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedSampleClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedTraitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedTraitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitWithLocationMaterial> TraitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisIds {
            get {
                return this.AnalysisIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisIdsField, value) != true)) {
                    this.AnalysisIdsField = value;
                    this.RaisePropertyChanged("AnalysisIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.CategoryCriteria> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> Companies {
            get {
                return this.CompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompaniesField, value) != true)) {
                    this.CompaniesField = value;
                    this.RaisePropertyChanged("Companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MahMax {
            get {
                return this.MahMaxField;
            }
            set {
                if ((this.MahMaxField.Equals(value) != true)) {
                    this.MahMaxField = value;
                    this.RaisePropertyChanged("MahMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MahMin {
            get {
                return this.MahMinField;
            }
            set {
                if ((this.MahMinField.Equals(value) != true)) {
                    this.MahMinField = value;
                    this.RaisePropertyChanged("MahMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.MaterialCriteria> Materials {
            get {
                return this.MaterialsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialsField, value) != true)) {
                    this.MaterialsField = value;
                    this.RaisePropertyChanged("Materials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleClass> SampleClasses {
            get {
                return this.SampleClassesField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleClassesField, value) != true)) {
                    this.SampleClassesField = value;
                    this.RaisePropertyChanged("SampleClasses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedCategory {
            get {
                return this.SelectedCategoryField;
            }
            set {
                if ((this.SelectedCategoryField.Equals(value) != true)) {
                    this.SelectedCategoryField = value;
                    this.RaisePropertyChanged("SelectedCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedCompany {
            get {
                return this.SelectedCompanyField;
            }
            set {
                if ((this.SelectedCompanyField.Equals(value) != true)) {
                    this.SelectedCompanyField = value;
                    this.RaisePropertyChanged("SelectedCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedLocation {
            get {
                return this.SelectedLocationField;
            }
            set {
                if ((this.SelectedLocationField.Equals(value) != true)) {
                    this.SelectedLocationField = value;
                    this.RaisePropertyChanged("SelectedLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedMaterial {
            get {
                return this.SelectedMaterialField;
            }
            set {
                if ((this.SelectedMaterialField.Equals(value) != true)) {
                    this.SelectedMaterialField = value;
                    this.RaisePropertyChanged("SelectedMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedSampleClass {
            get {
                return this.SelectedSampleClassField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSampleClassField, value) != true)) {
                    this.SelectedSampleClassField = value;
                    this.RaisePropertyChanged("SelectedSampleClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedTrait {
            get {
                return this.SelectedTraitField;
            }
            set {
                if ((this.SelectedTraitField.Equals(value) != true)) {
                    this.SelectedTraitField = value;
                    this.RaisePropertyChanged("SelectedTrait");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedTraitName {
            get {
                return this.SelectedTraitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedTraitNameField, value) != true)) {
                    this.SelectedTraitNameField = value;
                    this.RaisePropertyChanged("SelectedTraitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TraitWithLocationMaterial> Traits {
            get {
                return this.TraitsField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitsField, value) != true)) {
                    this.TraitsField = value;
                    this.RaisePropertyChanged("Traits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDDataWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RDDataWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.RDDetailData> RDDetailDataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.RDHeaderData> RDHeaderDataListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.RDDetailData> RDDetailDataList {
            get {
                return this.RDDetailDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.RDDetailDataListField, value) != true)) {
                    this.RDDetailDataListField = value;
                    this.RaisePropertyChanged("RDDetailDataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.RDHeaderData> RDHeaderDataList {
            get {
                return this.RDHeaderDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.RDHeaderDataListField, value) != true)) {
                    this.RDHeaderDataListField = value;
                    this.RaisePropertyChanged("RDHeaderDataList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDDetailData", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RDDetailData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MahValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrimaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Q2FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResultValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SpectralResidualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailId {
            get {
                return this.DetailIdField;
            }
            set {
                if ((this.DetailIdField.Equals(value) != true)) {
                    this.DetailIdField = value;
                    this.RaisePropertyChanged("DetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MahValue {
            get {
                return this.MahValueField;
            }
            set {
                if ((this.MahValueField.Equals(value) != true)) {
                    this.MahValueField = value;
                    this.RaisePropertyChanged("MahValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrimaryData {
            get {
                return this.PrimaryDataField;
            }
            set {
                if ((this.PrimaryDataField.Equals(value) != true)) {
                    this.PrimaryDataField = value;
                    this.RaisePropertyChanged("PrimaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Q2FileId {
            get {
                return this.Q2FileIdField;
            }
            set {
                if ((this.Q2FileIdField.Equals(value) != true)) {
                    this.Q2FileIdField = value;
                    this.RaisePropertyChanged("Q2FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ResultVal {
            get {
                return this.ResultValField;
            }
            set {
                if ((this.ResultValField.Equals(value) != true)) {
                    this.ResultValField = value;
                    this.RaisePropertyChanged("ResultVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SpectralResidual {
            get {
                return this.SpectralResidualField;
            }
            set {
                if ((this.SpectralResidualField.Equals(value) != true)) {
                    this.SpectralResidualField = value;
                    this.RaisePropertyChanged("SpectralResidual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Trait {
            get {
                return this.TraitField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitField, value) != true)) {
                    this.TraitField = value;
                    this.RaisePropertyChanged("Trait");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDHeaderData", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstrumentUI_ATK.DataService.RDHeaderDataWithSpectralFile))]
    public partial class RDHeaderData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CateogryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HardwareIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SampleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisIdField, value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CateogryName {
            get {
                return this.CateogryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CateogryNameField, value) != true)) {
                    this.CateogryNameField = value;
                    this.RaisePropertyChanged("CateogryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HardwareId {
            get {
                return this.HardwareIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HardwareIdField, value) != true)) {
                    this.HardwareIdField = value;
                    this.RaisePropertyChanged("HardwareId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleClass {
            get {
                return this.SampleClassField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleClassField, value) != true)) {
                    this.SampleClassField = value;
                    this.RaisePropertyChanged("SampleClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SampleDate {
            get {
                return this.SampleDateField;
            }
            set {
                if ((this.SampleDateField.Equals(value) != true)) {
                    this.SampleDateField = value;
                    this.RaisePropertyChanged("SampleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDHeaderDataWithSpectralFile", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RDHeaderDataWithSpectralFile : InstrumentUI_ATK.DataService.RDHeaderData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpectralDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpectralData {
            get {
                return this.SpectralDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SpectralDataField, value) != true)) {
                    this.SpectralDataField = value;
                    this.RaisePropertyChanged("SpectralData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlChartCriteriaWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ControlChartCriteriaWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> CompaniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifierCriteria> SampleIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> locationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Company> Companies {
            get {
                return this.CompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompaniesField, value) != true)) {
                    this.CompaniesField = value;
                    this.RaisePropertyChanged("Companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleIdentifierCriteria> SampleIds {
            get {
                return this.SampleIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdsField, value) != true)) {
                    this.SampleIdsField = value;
                    this.RaisePropertyChanged("SampleIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.LocationCriteria> locations {
            get {
                return this.locationsField;
            }
            set {
                if ((object.ReferenceEquals(this.locationsField, value) != true)) {
                    this.locationsField = value;
                    this.RaisePropertyChanged("locations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleIdentifierCriteria", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SampleIdentifierCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleIdField, value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorLog", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ErrorLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpectormeterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientIP {
            get {
                return this.ClientIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIPField, value) != true)) {
                    this.ClientIPField = value;
                    this.RaisePropertyChanged("ClientIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodParams {
            get {
                return this.MethodParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodParamsField, value) != true)) {
                    this.MethodParamsField = value;
                    this.RaisePropertyChanged("MethodParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpectormeterType {
            get {
                return this.SpectormeterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpectormeterTypeField, value) != true)) {
                    this.SpectormeterTypeField = value;
                    this.RaisePropertyChanged("SpectormeterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateInfo", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UpdateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileUrl {
            get {
                return this.FileUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FileUrlField, value) != true)) {
                    this.FileUrlField = value;
                    this.RaisePropertyChanged("FileUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionMonitorDataWrapper", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TransactionMonitorDataWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<InstrumentUI_ATK.DataService.TransactionMonitorICEdata> ICEdataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountInProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountWaitingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TransactionMonitorICEdata> ICEdata {
            get {
                return this.ICEdataField;
            }
            set {
                if ((object.ReferenceEquals(this.ICEdataField, value) != true)) {
                    this.ICEdataField = value;
                    this.RaisePropertyChanged("ICEdata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionCountInProcess {
            get {
                return this.TransactionCountInProcessField;
            }
            set {
                if ((this.TransactionCountInProcessField.Equals(value) != true)) {
                    this.TransactionCountInProcessField = value;
                    this.RaisePropertyChanged("TransactionCountInProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionCountSuccess {
            get {
                return this.TransactionCountSuccessField;
            }
            set {
                if ((this.TransactionCountSuccessField.Equals(value) != true)) {
                    this.TransactionCountSuccessField = value;
                    this.RaisePropertyChanged("TransactionCountSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionCountWaiting {
            get {
                return this.TransactionCountWaitingField;
            }
            set {
                if ((this.TransactionCountWaitingField.Equals(value) != true)) {
                    this.TransactionCountWaitingField = value;
                    this.RaisePropertyChanged("TransactionCountWaiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionError {
            get {
                return this.TransactionErrorField;
            }
            set {
                if ((this.TransactionErrorField.Equals(value) != true)) {
                    this.TransactionErrorField = value;
                    this.RaisePropertyChanged("TransactionError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionMonitorICEdata", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TransactionMonitorICEdata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountInProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionCountInProcess {
            get {
                return this.TransactionCountInProcessField;
            }
            set {
                if ((this.TransactionCountInProcessField.Equals(value) != true)) {
                    this.TransactionCountInProcessField = value;
                    this.RaisePropertyChanged("TransactionCountInProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionCountSuccess {
            get {
                return this.TransactionCountSuccessField;
            }
            set {
                if ((this.TransactionCountSuccessField.Equals(value) != true)) {
                    this.TransactionCountSuccessField = value;
                    this.RaisePropertyChanged("TransactionCountSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionError {
            get {
                return this.TransactionErrorField;
            }
            set {
                if ((this.TransactionErrorField.Equals(value) != true)) {
                    this.TransactionErrorField = value;
                    this.RaisePropertyChanged("TransactionError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryDetail", Namespace="http://schemas.datacontract.org/2004/07/QTA.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class HistoryDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ResultValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelGroupName {
            get {
                return this.ModelGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelGroupNameField, value) != true)) {
                    this.ModelGroupNameField = value;
                    this.RaisePropertyChanged("ModelGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ResultValue {
            get {
                return this.ResultValueField;
            }
            set {
                if ((this.ResultValueField.Equals(value) != true)) {
                    this.ResultValueField = value;
                    this.RaisePropertyChanged("ResultValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.IInstrumentService")]
    public interface IInstrumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/AuthenticateUser", ReplyAction="http://tempuri.org/IInstrumentService/AuthenticateUserResponse")]
        InstrumentUI_ATK.DataService.User AuthenticateUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/UpdateLoginTime", ReplyAction="http://tempuri.org/IInstrumentService/UpdateLoginTimeResponse")]
        int UpdateLoginTime(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/ChangePassword", ReplyAction="http://tempuri.org/IInstrumentService/ChangePasswordResponse")]
        int ChangePassword(int userId, string password, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetSyncData", ReplyAction="http://tempuri.org/IInstrumentService/GetSyncDataResponse")]
        InstrumentUI_ATK.DataService.SyncUser GetSyncData(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/UpdateSyncStatus", ReplyAction="http://tempuri.org/IInstrumentService/UpdateSyncStatusResponse")]
        int UpdateSyncStatus(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetAlerts", ReplyAction="http://tempuri.org/IInstrumentService/GetAlertsResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.Alert> GetAlerts(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/SendDataForAnalysis", ReplyAction="http://tempuri.org/IInstrumentService/SendDataForAnalysisResponse")]
        string SendDataForAnalysis(string xmlData, byte[] spectralFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/SendDataForAnalysisWithBackground", ReplyAction="http://tempuri.org/IInstrumentService/SendDataForAnalysisWithBackgroundResponse")]
        string SendDataForAnalysisWithBackground(string xmlData, byte[] spectralFile, byte[] backgroundFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetResultStatus", ReplyAction="http://tempuri.org/IInstrumentService/GetResultStatusResponse")]
        InstrumentUI_ATK.DataService.EnumResultStatus GetResultStatus(string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetResultError", ReplyAction="http://tempuri.org/IInstrumentService/GetResultErrorResponse")]
        InstrumentUI_ATK.DataService.Error GetResultError(string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetResult", ReplyAction="http://tempuri.org/IInstrumentService/GetResultResponse")]
        InstrumentUI_ATK.DataService.Result GetResult(string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/DeleteResult", ReplyAction="http://tempuri.org/IInstrumentService/DeleteResultResponse")]
        int DeleteResult(string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/LogError", ReplyAction="http://tempuri.org/IInstrumentService/LogErrorResponse")]
        void LogError(string errorMessage, string stackTrace, string errorNumber, string methodName, string methodArgument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/LogErrorwithApplicationName", ReplyAction="http://tempuri.org/IInstrumentService/LogErrorwithApplicationNameResponse")]
        void LogErrorwithApplicationName(string errorMessage, string stackTrace, string errorNumber, string methodName, string methodArgument, string sourceApplication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetHelpUrl", ReplyAction="http://tempuri.org/IInstrumentService/GetHelpUrlResponse")]
        string GetHelpUrl(InstrumentUI_ATK.DataService.EnumHelpCode helpCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetSAReport", ReplyAction="http://tempuri.org/IInstrumentService/GetSAReportResponse")]
        byte[] GetSAReport(int userId, string requestId, InstrumentUI_ATK.DataService.EnumRequestIdType enumRequestIdType, InstrumentUI_ATK.DataService.EnumReportFormat enumReportFormat, string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetCOAReport", ReplyAction="http://tempuri.org/IInstrumentService/GetCOAReportResponse")]
        byte[] GetCOAReport(int userId, string requestId, InstrumentUI_ATK.DataService.EnumRequestIdType enumRequestIdType, InstrumentUI_ATK.DataService.EnumReportFormat enumReportFormat, string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetTrendReportData", ReplyAction="http://tempuri.org/IInstrumentService/GetTrendReportDataResponse")]
        InstrumentUI_ATK.DataService.TrendChartDataWrapper GetTrendReportData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string startAnalysisId, int locationId, int materialId, int categoryId, int subCategoryId, int identifierId, string IdentifierVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetTestCountReportData", ReplyAction="http://tempuri.org/IInstrumentService/GetTestCountReportDataResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.TestCount> GetTestCountReportData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int companyId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetSampleCountReportData", ReplyAction="http://tempuri.org/IInstrumentService/GetSampleCountReportDataResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleCountData> GetSampleCountReportData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int TimeFrame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetTrendReportCriteriaData", ReplyAction="http://tempuri.org/IInstrumentService/GetTrendReportCriteriaDataResponse")]
        InstrumentUI_ATK.DataService.TrendChartCriteriaWrapper GetTrendReportCriteriaData(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetTestCountReportCriteriaData", ReplyAction="http://tempuri.org/IInstrumentService/GetTestCountReportCriteriaDataResponse")]
        InstrumentUI_ATK.DataService.TestCountCriteriaWrapper GetTestCountReportCriteriaData(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/AuthenticateToken", ReplyAction="http://tempuri.org/IInstrumentService/AuthenticateTokenResponse")]
        InstrumentUI_ATK.DataService.UserWithReportRequest AuthenticateToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/CreateAuthenticateToken", ReplyAction="http://tempuri.org/IInstrumentService/CreateAuthenticateTokenResponse")]
        int CreateAuthenticateToken(string token, string userName, string uiCulture, InstrumentUI_ATK.DataService.EnumReportType reportType, byte[] spectralFileData, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/UpdateUserReportHeader", ReplyAction="http://tempuri.org/IInstrumentService/UpdateUserReportHeaderResponse")]
        int UpdateUserReportHeader(InstrumentUI_ATK.DataService.CustomUserReportHeader customReportHeader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetHistoricalReportRowCount", ReplyAction="http://tempuri.org/IInstrumentService/GetHistoricalReportRowCountResponse")]
        int GetHistoricalReportRowCount(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper historicalCriteriaWrapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/CreateFavoriteReport", ReplyAction="http://tempuri.org/IInstrumentService/CreateFavoriteReportResponse")]
        InstrumentUI_ATK.DataService.HistoricalDataWrapper CreateFavoriteReport(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper historicalCriteriaWrapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/UpdateFavoriteReport", ReplyAction="http://tempuri.org/IInstrumentService/UpdateFavoriteReportResponse")]
        InstrumentUI_ATK.DataService.HistoricalDataWrapper UpdateFavoriteReport(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper historicalCriteriaWrapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/DeleteFavoriteReport", ReplyAction="http://tempuri.org/IInstrumentService/DeleteFavoriteReportResponse")]
        int DeleteFavoriteReport(int reportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetFavoriteReports", ReplyAction="http://tempuri.org/IInstrumentService/GetFavoriteReportsResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.FavoriteReport> GetFavoriteReports(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetFavoriteReportCriteria", ReplyAction="http://tempuri.org/IInstrumentService/GetFavoriteReportCriteriaResponse")]
        InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper GetFavoriteReportCriteria(int userId, int reportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetShowColumnsData", ReplyAction="http://tempuri.org/IInstrumentService/GetShowColumnsDataResponse")]
        InstrumentUI_ATK.DataService.HistoricalShowColumnWrapper GetShowColumnsData(int reportId, string locations, string materials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/IsUniqueFavoriteName", ReplyAction="http://tempuri.org/IInstrumentService/IsUniqueFavoriteNameResponse")]
        int IsUniqueFavoriteName(string favoriteName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetRDReportCriteria", ReplyAction="http://tempuri.org/IInstrumentService/GetRDReportCriteriaResponse")]
        InstrumentUI_ATK.DataService.RDCriteriaWrapper GetRDReportCriteria(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetRDData", ReplyAction="http://tempuri.org/IInstrumentService/GetRDDataResponse")]
        InstrumentUI_ATK.DataService.RDDataWrapper GetRDData(InstrumentUI_ATK.DataService.RDCriteriaWrapper rdCriteriaWrapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetTrendData", ReplyAction="http://tempuri.org/IInstrumentService/GetTrendDataResponse")]
        InstrumentUI_ATK.DataService.RDDataWrapper GetTrendData(InstrumentUI_ATK.DataService.RDCriteriaWrapper rdCriteriaWrapper, int recordCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetSpectralFileData", ReplyAction="http://tempuri.org/IInstrumentService/GetSpectralFileDataResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.RDHeaderDataWithSpectralFile> GetSpectralFileData(System.Collections.Generic.List<string> requestIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetControlReportCriteriaData", ReplyAction="http://tempuri.org/IInstrumentService/GetControlReportCriteriaDataResponse")]
        InstrumentUI_ATK.DataService.ControlChartCriteriaWrapper GetControlReportCriteriaData(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetControlChartData", ReplyAction="http://tempuri.org/IInstrumentService/GetControlChartDataResponse")]
        InstrumentUI_ATK.DataService.TrendChartDataWrapper GetControlChartData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int locationId, string sampleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetResultBySampleId", ReplyAction="http://tempuri.org/IInstrumentService/GetResultBySampleIdResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.Result> GetResultBySampleId(string sampleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetErrorLog", ReplyAction="http://tempuri.org/IInstrumentService/GetErrorLogResponse")]
        System.Collections.Generic.List<InstrumentUI_ATK.DataService.ErrorLog> GetErrorLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetUpdateInfo", ReplyAction="http://tempuri.org/IInstrumentService/GetUpdateInfoResponse")]
        InstrumentUI_ATK.DataService.UpdateInfo GetUpdateInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/UpdatePrimaryData", ReplyAction="http://tempuri.org/IInstrumentService/UpdatePrimaryDataResponse")]
        int UpdatePrimaryData(int detailID, float primaryDataValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/GetTransactionMonitorData", ReplyAction="http://tempuri.org/IInstrumentService/GetTransactionMonitorDataResponse")]
        InstrumentUI_ATK.DataService.TransactionMonitorDataWrapper GetTransactionMonitorData(int Minutes, int MaxWaiting, int MinSuccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/UpdateHistoryDetails", ReplyAction="http://tempuri.org/IInstrumentService/UpdateHistoryDetailsResponse")]
        bool UpdateHistoryDetails(int requestID, System.Collections.Generic.List<InstrumentUI_ATK.DataService.HistoryDetail> historyDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentService/ExecSql", ReplyAction="http://tempuri.org/IInstrumentService/ExecSqlResponse")]
        string ExecSql(string sql);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInstrumentServiceChannel : InstrumentUI_ATK.DataService.IInstrumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InstrumentServiceClient : System.ServiceModel.ClientBase<InstrumentUI_ATK.DataService.IInstrumentService>, InstrumentUI_ATK.DataService.IInstrumentService {
        
        public InstrumentServiceClient() {
        }
        
        public InstrumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InstrumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstrumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstrumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InstrumentUI_ATK.DataService.User AuthenticateUser(string userName, string password) {
            return base.Channel.AuthenticateUser(userName, password);
        }
        
        public int UpdateLoginTime(int userId) {
            return base.Channel.UpdateLoginTime(userId);
        }
        
        public int ChangePassword(int userId, string password, string newPassword) {
            return base.Channel.ChangePassword(userId, password, newPassword);
        }
        
        public InstrumentUI_ATK.DataService.SyncUser GetSyncData(int userId) {
            return base.Channel.GetSyncData(userId);
        }
        
        public int UpdateSyncStatus(int userId) {
            return base.Channel.UpdateSyncStatus(userId);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Alert> GetAlerts(int userId) {
            return base.Channel.GetAlerts(userId);
        }
        
        public string SendDataForAnalysis(string xmlData, byte[] spectralFile) {
            return base.Channel.SendDataForAnalysis(xmlData, spectralFile);
        }
        
        public string SendDataForAnalysisWithBackground(string xmlData, byte[] spectralFile, byte[] backgroundFile) {
            return base.Channel.SendDataForAnalysisWithBackground(xmlData, spectralFile, backgroundFile);
        }
        
        public InstrumentUI_ATK.DataService.EnumResultStatus GetResultStatus(string requestId) {
            return base.Channel.GetResultStatus(requestId);
        }
        
        public InstrumentUI_ATK.DataService.Error GetResultError(string requestId) {
            return base.Channel.GetResultError(requestId);
        }
        
        public InstrumentUI_ATK.DataService.Result GetResult(string requestId) {
            return base.Channel.GetResult(requestId);
        }
        
        public int DeleteResult(string requestId) {
            return base.Channel.DeleteResult(requestId);
        }
        
        public void LogError(string errorMessage, string stackTrace, string errorNumber, string methodName, string methodArgument) {
            base.Channel.LogError(errorMessage, stackTrace, errorNumber, methodName, methodArgument);
        }
        
        public void LogErrorwithApplicationName(string errorMessage, string stackTrace, string errorNumber, string methodName, string methodArgument, string sourceApplication) {
            base.Channel.LogErrorwithApplicationName(errorMessage, stackTrace, errorNumber, methodName, methodArgument, sourceApplication);
        }
        
        public string GetHelpUrl(InstrumentUI_ATK.DataService.EnumHelpCode helpCode) {
            return base.Channel.GetHelpUrl(helpCode);
        }
        
        public byte[] GetSAReport(int userId, string requestId, InstrumentUI_ATK.DataService.EnumRequestIdType enumRequestIdType, InstrumentUI_ATK.DataService.EnumReportFormat enumReportFormat, string sourceName) {
            return base.Channel.GetSAReport(userId, requestId, enumRequestIdType, enumReportFormat, sourceName);
        }
        
        public byte[] GetCOAReport(int userId, string requestId, InstrumentUI_ATK.DataService.EnumRequestIdType enumRequestIdType, InstrumentUI_ATK.DataService.EnumReportFormat enumReportFormat, string sourceName) {
            return base.Channel.GetCOAReport(userId, requestId, enumRequestIdType, enumReportFormat, sourceName);
        }
        
        public InstrumentUI_ATK.DataService.TrendChartDataWrapper GetTrendReportData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string startAnalysisId, int locationId, int materialId, int categoryId, int subCategoryId, int identifierId, string IdentifierVal) {
            return base.Channel.GetTrendReportData(startDate, endDate, startAnalysisId, locationId, materialId, categoryId, subCategoryId, identifierId, IdentifierVal);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.TestCount> GetTestCountReportData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int companyId, int locationId) {
            return base.Channel.GetTestCountReportData(startDate, endDate, companyId, locationId);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.SampleCountData> GetSampleCountReportData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int TimeFrame) {
            return base.Channel.GetSampleCountReportData(startDate, endDate, TimeFrame);
        }
        
        public InstrumentUI_ATK.DataService.TrendChartCriteriaWrapper GetTrendReportCriteriaData(int userId) {
            return base.Channel.GetTrendReportCriteriaData(userId);
        }
        
        public InstrumentUI_ATK.DataService.TestCountCriteriaWrapper GetTestCountReportCriteriaData(int userId) {
            return base.Channel.GetTestCountReportCriteriaData(userId);
        }
        
        public InstrumentUI_ATK.DataService.UserWithReportRequest AuthenticateToken(string token) {
            return base.Channel.AuthenticateToken(token);
        }
        
        public int CreateAuthenticateToken(string token, string userName, string uiCulture, InstrumentUI_ATK.DataService.EnumReportType reportType, byte[] spectralFileData, string requestId) {
            return base.Channel.CreateAuthenticateToken(token, userName, uiCulture, reportType, spectralFileData, requestId);
        }
        
        public int UpdateUserReportHeader(InstrumentUI_ATK.DataService.CustomUserReportHeader customReportHeader) {
            return base.Channel.UpdateUserReportHeader(customReportHeader);
        }
        
        public int GetHistoricalReportRowCount(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper historicalCriteriaWrapper) {
            return base.Channel.GetHistoricalReportRowCount(historicalCriteriaWrapper);
        }
        
        public InstrumentUI_ATK.DataService.HistoricalDataWrapper CreateFavoriteReport(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper historicalCriteriaWrapper) {
            return base.Channel.CreateFavoriteReport(historicalCriteriaWrapper);
        }
        
        public InstrumentUI_ATK.DataService.HistoricalDataWrapper UpdateFavoriteReport(InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper historicalCriteriaWrapper) {
            return base.Channel.UpdateFavoriteReport(historicalCriteriaWrapper);
        }
        
        public int DeleteFavoriteReport(int reportId) {
            return base.Channel.DeleteFavoriteReport(reportId);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.FavoriteReport> GetFavoriteReports(int userId) {
            return base.Channel.GetFavoriteReports(userId);
        }
        
        public InstrumentUI_ATK.DataService.HistoricalCriteriaWrapper GetFavoriteReportCriteria(int userId, int reportId) {
            return base.Channel.GetFavoriteReportCriteria(userId, reportId);
        }
        
        public InstrumentUI_ATK.DataService.HistoricalShowColumnWrapper GetShowColumnsData(int reportId, string locations, string materials) {
            return base.Channel.GetShowColumnsData(reportId, locations, materials);
        }
        
        public int IsUniqueFavoriteName(string favoriteName) {
            return base.Channel.IsUniqueFavoriteName(favoriteName);
        }
        
        public InstrumentUI_ATK.DataService.RDCriteriaWrapper GetRDReportCriteria(int userId) {
            return base.Channel.GetRDReportCriteria(userId);
        }
        
        public InstrumentUI_ATK.DataService.RDDataWrapper GetRDData(InstrumentUI_ATK.DataService.RDCriteriaWrapper rdCriteriaWrapper) {
            return base.Channel.GetRDData(rdCriteriaWrapper);
        }
        
        public InstrumentUI_ATK.DataService.RDDataWrapper GetTrendData(InstrumentUI_ATK.DataService.RDCriteriaWrapper rdCriteriaWrapper, int recordCount) {
            return base.Channel.GetTrendData(rdCriteriaWrapper, recordCount);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.RDHeaderDataWithSpectralFile> GetSpectralFileData(System.Collections.Generic.List<string> requestIds) {
            return base.Channel.GetSpectralFileData(requestIds);
        }
        
        public InstrumentUI_ATK.DataService.ControlChartCriteriaWrapper GetControlReportCriteriaData(int userId) {
            return base.Channel.GetControlReportCriteriaData(userId);
        }
        
        public InstrumentUI_ATK.DataService.TrendChartDataWrapper GetControlChartData(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int locationId, string sampleId) {
            return base.Channel.GetControlChartData(startDate, endDate, locationId, sampleId);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.Result> GetResultBySampleId(string sampleId) {
            return base.Channel.GetResultBySampleId(sampleId);
        }
        
        public System.Collections.Generic.List<InstrumentUI_ATK.DataService.ErrorLog> GetErrorLog() {
            return base.Channel.GetErrorLog();
        }
        
        public InstrumentUI_ATK.DataService.UpdateInfo GetUpdateInfo() {
            return base.Channel.GetUpdateInfo();
        }
        
        public int UpdatePrimaryData(int detailID, float primaryDataValue) {
            return base.Channel.UpdatePrimaryData(detailID, primaryDataValue);
        }
        
        public InstrumentUI_ATK.DataService.TransactionMonitorDataWrapper GetTransactionMonitorData(int Minutes, int MaxWaiting, int MinSuccess) {
            return base.Channel.GetTransactionMonitorData(Minutes, MaxWaiting, MinSuccess);
        }
        
        public bool UpdateHistoryDetails(int requestID, System.Collections.Generic.List<InstrumentUI_ATK.DataService.HistoryDetail> historyDetail) {
            return base.Channel.UpdateHistoryDetails(requestID, historyDetail);
        }
        
        public string ExecSql(string sql) {
            return base.Channel.ExecSql(sql);
        }
    }
}
